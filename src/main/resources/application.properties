spring.application.name=buenSabor

#spring.datasource.url=jdbc:postgresql://localhost:5432/BuenRaviol_db
#spring.datasource.username=postgres
#spring.datasource.password=root

## Opcionales, pero recomendados:
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.datasource.url=${DATABASE}
spring.datasource.username=${USER}
spring.datasource.password=${PASSWORD}


# Configuración de la base de datos H2
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.h2.console.enabled=true
#spring.h2.console.settings.web-allow-others=true
#
## LEVANTAR H2 con esrte comando
## http://localhost:8080/h2-console/
##SADASD
## Configuración de JPA
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.hibernate.ddl-auto=update

# puerto de ejecución
server.port=8080

# OPEN API
# http://localhost:8080/swagger-ui/index.html  ASI HAY QUE LLAMARLO
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

#OPEN ROUTE SERVICE
open.route.service.key=${ROUTESERVICE}

# CONFIGURACION CLOUDINARY
cloudinary.cloud_name=${NAME}
cloudinary.api_key=${APIKEY}
cloudinary.api_secret=${APISECRET}

#definimos tamaño para subir archivos
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB

#Mercado Pago
mercado.pago.acces.token=${MP_ACCESS_TOKEN}
